@import './variables';

//reset
* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 14px;
}

body {
  margin: 0;
  font-family: SourceHanSansCN-Regular;
  line-break: 15px;
  font-size-adjust: none;
  font-stretch: normal;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1.1429rem;
  text-align: center;
}

a {
  color: #999;
  text-decoration: none;
}

body,
ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
p,
form,
fieldset,
legend,
input,
textarea,
select,
button,
th,
td {
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

img,
fieldset {
  border: 0 none;
}

li {
  list-style-image: none;
  list-style-position: outside;
  list-style-type: none;
}

p {
  line-height: 2.5714rem;
}

@each $colorKey,
$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }

  .bg-#{$colorKey} {
    color: $color;
  }
}

// text 工具
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}

@each $sizeKey,
$size in $font-sizes {
  // .fs-#{$sizeKey} {
  //   font-size: $size * $base-font-size;
  // }
  .lh-#{$sizeKey}{
      line-height: $size *$base-font-size;
  }
}

// width
.w-100 {
  width: 100%
}

;

// height
.h-100 {
  height: 100%;
}

;

// flex
.d-flex {
  display: flex;
};

.flex-cloum {
  flex-direction: column;
};


.flex-wrap {
  flex-wrap: wrap;
}

;

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

;

.flex-1 {
  flex: 1;
}

;

.flex-grow-1 {
  flex-grow: 1
}

// m-0 mx-0
@each $typeKey,
$type in $spaceing-types {

  @each $sizeKey,
  $size in $spaceing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $space-base-size
    }
  }

  //.mx-1 .my-1
  @each $sizeKey,
  $size in $spaceing-sizes {
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-left: $size * $space-base-size;
      #{$type}-right: $size * $space-base-size
    }

    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $space-base-size;
      #{$type}-bottom: $size * $space-base-size
    }
  }

  // .mt-1

  @each $directionKey,
  $direction in $spaceing-directions {

    @each $sizeKey,
    $size in $spaceing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $space-base-size
      }
    }
  }

}

// nav
.nav {
    display: flex;
    .nav-item {
      border-bottom: 0.2143rem solid transparent;
    //   padding-top: 0.3rem;
      color: map-get($colors, 'dark-1' );
      &.active {
        border-bottom-color:map-get($colors, 'primary' );
      }
    }
  }